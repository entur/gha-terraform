name: Entur/Terraform/Plan

on:
  workflow_call:
    inputs:
      terraform_dir:
        description: "Path to Terraform Directory"
        type: string
        default: "terraform"
      cloud_provider:
        description: "The cloud provider for this project"
        type: string
        default: "GCP"
      environment:
        description: "The cloud environment"
        type: string
        default: "dev"
      tf_workspace:
        description: "The terraform workspace"
        type: string
        default: "dev"
      tf_version:
        description: "Terraform version"
        type: string
        default: "latest"

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Access gcp
        id: login-gcp
        uses: google-github-actions/auth@v2.1.2
        if: inputs.cloud_provider == 'GCP'
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        id: setup
        with:
          terraform_version: ${{ inputs.tf_version }}
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        working-directory: ${{ inputs.terraform_dir }}
        shell: bash
        run: |
          terraform init

      - name: Terraform Plan
        id: plan
        working-directory: ${{ inputs.terraform_dir }}
        shell: bash
        run: |
          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          terraform plan -no-color -out=plan.tfplan >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
         name: tf-plan
         path: ${{ inputs.terraform_dir }}/tfplans
         if-no-files-found: error
         retention-days: 1
         overwrite: true
